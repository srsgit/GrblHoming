                        ---- GrblController ----

GrblController is a gcode sender, monitor and homing tool for GRBL for
Mac, Windows and Linux systems written using the Qt Desktop Framework in C++.

Enhanced by Zapmaker. Kosme did a great deal of excellent foundation work on this
project.

Details on how to do this can be found here:
http://zapmaker.org/

--------------------------------------------------------------------------------
GCV  : Grbl Controller Visualizer  is a 3D extension of GrblController-3.6.1
--------------------------------------------------------------------------------


SRS.1
-----
Forked: GCV-SRS.1 from LETARTARE GCV-3.6.1-T4.
Moved src back to the TRUNK rather than in Branch folders.
First use of GIT so may not be properly structured.
Had to hack ABSOLUTE and RELATIVE in Log4QT, name clash somewhere
Replace Jog Step slider with radio buttons
Add Zero X,Y, Z8.0 for touch off against 8mm rod

Compiled with Qt 5.2.0 / MINGW48_32
Using QGLViewer 2.6.0




--------------------------------------------------------------------------------

GCV-3.6.1-T4  Grbl Controller Visualizer  (LETARTARE proposals August 22, 2014)

An executable 'Win32' into 'winexe/GCV-3.6.1-T4-cb.jtgcv'.
This is a file Win32 compressed, change the extension 'jtgcv -> 7z' to decompress.

* 3.6.1-T3 +

1- Analyzes the gcode with 4 axes X, Y, Z, T   ( fourth axis ),
2- New display console ('Console') commands, with the ability to copy, delete
	text part, delete the selected (or all)  text, print the selected (or all) text
3- Display speed rate XYZ with 'Lcd', display last spindle speed,
4- Visualizes the 'Gcode' XYZ 3D with motion mouse  :
	- A help button to explain the multiple possible actions on the drawing,
	  by utilsation keyboard and mouse,
	- You can see it or not the box limits the drawing,
	- Choosing a particuler tool,
	- Different views are available by buttons,
	- Display axes oriented,
	- Display a grid in the XY plane,
	- Choice of deleting lines G0.

5- Animation 3D XYZ axes, regardless of the connection :
	- When loading a file, you can read its contents in the console 'Visual',
	  which will launch the manual or automatic animation,
	- In manual mode you can use the mouse to select a line of code or the
	  navigation buttons or sliders keyboard arrows,
	- In automatic mode has a period setting reading 'Gcode',

6- In addition to the periodic polling of 'Grbl', a new method is proposed
   EXPERIMENTAL display named 'Synchronous simulation' based on motion prediction,
	- This mode is for use rather large arcs or helical path,
	- It does not work with manual controls,
	- It is accessed via 'Tools->Options->Display->Synchronous simulation',

7- The visual presentation of 'GCV' has been modified :
	- a flip button to pause and resume sending gcode file at the end of the current
	  line, will send to 'Grbl',
	- buttons for Grbl commands grouped with console,
	- manual controls axes (jog) are grouped next to the display positions :
	- the incremental value step manual controls is defined by a slide
	  and a display, and can be adjusted finely by keyboard keys,
	- homing new buttons for each axis,
	- homing new button for all axes,
	- the feed rate movement is displayed during,
	- the last spindle speed is displayed,

8- Updating of the French translation

- Works with versions Grbl :
	1- Three axes 0.8c, 0.9d, 0.9e, 0.9f, the last 0.9g
	2- Four axes 0845, 0.8c1, 0.8c2 (0.8c to 4 axes) with MEGA2560
  https://github.com/LETARTARE/Grbl-xx_with_Arduino/tree/master/Grbl8c2Mega2560

- KNOWN BUGS
	- In the mode 'Check', it does not use the command line to send '$C'
	- The mode 'Simulation synchronous' does not work in manual controls
	- If no file is loaded, the manual controls do not support the visualization tool
	- ...


--------------------------------------------------------------------------------
